name: ci-ghcr-azure-deploy

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

# Required permissions:
# - packages: write  -> to push image to GHCR
# - contents: read   -> to checkout repository
permissions:
  contents: read
  packages: write

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

env:
  # Use a stable, all-lowercase image repository name to avoid case issues with Docker registries.
  IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/azure-docker-apps
  CONTAINER_PORT: "8080"

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push image to GHCR
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:latest
            ${{ env.IMAGE_NAME }}:${{ github.sha }}

      # Deploy to Azure Container Apps (ACA)
      # Required repository secrets (Settings > Secrets and variables > Actions):
      # - AZURE_CREDENTIALS: output of `az ad sp create-for-rbac --name "gha-deployer" --role contributor --scopes /subscriptions/<SUB_ID>/resourceGroups/<RG_NAME> --sdk-auth`
      # - RG_NAME: Azure Resource Group name
      # - ACA_ENV: ACA Environment name
      # - ACA_NAME: ACA App name
      # Optional repository variable (Settings > Secrets and variables > Actions > Variables):
      # - AZURE_LOCATION: Azure region (e.g., westeurope). Defaults to westeurope if not provided.
      - name: Azure login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy to Azure Container Apps
        uses: azure/cli@v2
        with:
          inlineScript: |
            set -euo pipefail
            az extension add --name containerapp --upgrade -y
            az provider register --namespace Microsoft.App --wait

            RG="${{ secrets.RG_NAME }}"
            ENV_NAME="${{ secrets.ACA_ENV }}"
            APP_NAME="${{ secrets.ACA_NAME }}"
            LOCATION="${{ vars.AZURE_LOCATION }}"

            if [ -z "$RG" ] || [ -z "$ENV_NAME" ] || [ -z "$APP_NAME" ]; then
              echo "RG_NAME, ACA_ENV, and ACA_NAME must be set as GitHub secrets." >&2
              exit 1
            fi

            if [ -z "$LOCATION" ]; then
              LOCATION="westeurope"
            fi

            IMAGE="${{ env.IMAGE_NAME }}:${{ github.sha }}"

            # Ensure the ACA environment exists
            if ! az containerapp env show -g "$RG" -n "$ENV_NAME" &>/dev/null; then
              az containerapp env create -g "$RG" -n "$ENV_NAME" -l "$LOCATION"
            fi

            # Create or update the Container App
            if az containerapp show -g "$RG" -n "$APP_NAME" &>/dev/null; then
              az containerapp update \
                -g "$RG" -n "$APP_NAME" \
                --image "$IMAGE" \
                --set-env-vars PORT=${{ env.CONTAINER_PORT }} \
                --ingress external --target-port ${{ env.CONTAINER_PORT }}
            else
              az containerapp create \
                -g "$RG" -n "$APP_NAME" \
                --environment "$ENV_NAME" \
                --image "$IMAGE" \
                --ingress external --target-port ${{ env.CONTAINER_PORT }} \
                --cpu 0.5 --memory 1Gi \
                --set-env-vars PORT=${{ env.CONTAINER_PORT }}
            fi

            echo "Deployment complete. Current revision:"
            az containerapp revision list -g "$RG" -n "$APP_NAME" --query "[?properties.active].{name:name,image:properties.template.containers[0].image}" -o table
